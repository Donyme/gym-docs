I"d<h2 id="description">Description</h2>

<p>The inverted pendulum swingup problem is a classic problem in the control literature. In this
version of the problem, the pendulum starts in a random position, and the goal is to swing it up so
it stays upright.</p>

<p>The diagram below specifies the coordinate system used for the implementation of the pendulumâ€™s
dynamic equations.</p>

<p><img src="./diagrams/pendulum.png" alt="Pendulum Coordinate System" /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">x-y</code>: cartesian coordinates of the pendulumâ€™s end in meters.</li>
  <li><code class="language-plaintext highlighter-rouge">theta</code>: angle in radians.</li>
  <li><code class="language-plaintext highlighter-rouge">tau</code>: torque in <code class="language-plaintext highlighter-rouge">N * m</code>. Defined as positive <em>counter-clockwise</em>.</li>
</ul>

<h2 id="action-space">Action Space</h2>
<p>The action is the torque applied to the pendulum.</p>

<table>
  <thead>
    <tr>
      <th>Num</th>
      <th>Action</th>
      <th>Min</th>
      <th>Max</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>Torque</td>
      <td>-2.0</td>
      <td>2.0</td>
    </tr>
  </tbody>
</table>

<h2 id="observation-space">Observation Space</h2>
<p>The observations correspond to the x-y coordinate of the pendulumâ€™s end, and its angular velocity.</p>

<table>
  <thead>
    <tr>
      <th>Num</th>
      <th>Observation</th>
      <th>Min</th>
      <th>Max</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>x = cos(theta)</td>
      <td>-1.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <td>1</td>
      <td>y = sin(angle)</td>
      <td>-1.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Angular Velocity</td>
      <td>-8.0</td>
      <td>8.0</td>
    </tr>
  </tbody>
</table>

<h2 id="rewards">Rewards</h2>
<p>The reward is defined as:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>r = -(theta^2 + 0.1*theta_dt^2 + 0.001*torque^2)
</code></pre></div></div>
<p>where <code class="language-plaintext highlighter-rouge">theta</code> is the pendulumâ€™s angle normalized between <code class="language-plaintext highlighter-rouge">[-pi, pi]</code>.
Based on the above equation, the minimum reward that can be obtained is <code class="language-plaintext highlighter-rouge">-(pi^2 + 0.1*8^2 +
0.001*2^2) = -16.2736044</code>, while the maximum reward is zero (pendulum is
upright with zero velocity and no torque being applied).</p>

<h2 id="starting-state">Starting State</h2>
<p>The starting state is a random angle in <code class="language-plaintext highlighter-rouge">[-pi, pi]</code> and a random angular velocity in <code class="language-plaintext highlighter-rouge">[-1,1]</code>.</p>

<h2 id="episode-termination">Episode Termination</h2>
<p>An episode terminates after 200 steps. Thereâ€™s no other criteria for termination.</p>

<h2 id="arguments">Arguments</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">g</code>: acceleration of gravity measured in <code class="language-plaintext highlighter-rouge">(m/s^2)</code> used to calculate the pendulum dynamics. The default is
<code class="language-plaintext highlighter-rouge">g=10.0</code>.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gym.make('CartPole-v1', g=9.81)
</code></pre></div></div>

<h2 id="version-history">Version History</h2>

<ul>
  <li>v1: Simplify the math equations, no difference in behavior.</li>
  <li>v0: Initial versions release (1.0.0)</li>
</ul>
:ET