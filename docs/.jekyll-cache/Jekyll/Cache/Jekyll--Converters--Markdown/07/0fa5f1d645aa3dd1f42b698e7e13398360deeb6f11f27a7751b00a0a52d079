I"«	<p>Frozen lake involves crossing a frozen lake from Start(S) to goal(G) without falling into any holes(H). The agent may not always move in the intended direction due to the slippery nature of the frozen lake.</p>

<p>The agent take a 1-element vector for actions.
The action space is <code class="language-plaintext highlighter-rouge">(dir)</code>, where <code class="language-plaintext highlighter-rouge">dir</code> decides direction to move in which can be:</p>

<ul>
  <li>0: LEFT</li>
  <li>1: DOWN</li>
  <li>2: RIGHT</li>
  <li>3: UP</li>
</ul>

<p>The observation is a value representing the agents current position as</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>current_row * nrows + current_col
</code></pre></div></div>

<p><strong>Rewards:</strong></p>

<p>Reward schedule:</p>
<ul>
  <li>Reach goal(G): +1</li>
  <li>Reach hole(H): 0</li>
</ul>

<h3 id="arguments">Arguments</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gym.make('FrozenLake-v0', desc=None,map_name="4x4", is_slippery=True)
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">desc</code>: Used to specify custom map for frozen lake. For example,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>desc=["SFFF", "FHFH", "FFFH", "HFFG"].
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">map_name</code>: ID to use any of the preloaded maps.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"4x4":[
    "SFFF",
    "FHFH",
    "FFFH",
    "HFFG"
    ]

"8x8": [
    "SFFFFFFF",
    "FFFFFFFF",
    "FFFHFFFF",
    "FFFFFHFF",
    "FFFHFFFF",
    "FHHFFFHF",
    "FHFFHFHF",
    "FFFHFFFG",
]
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">is_slippery</code>: True/False. If True will move in intended direction with
probability of 1/3 else will move in either perpendicular direction with
equal probability of 1/3 in both directions.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>For example, if action is left and is_slippery is True, then:
- P(move left)=1/3
- P(move up)=1/3
- P(move down)=1/3 ### Version History
</code></pre></div></div>

<ul>
  <li>v0: Initial versions release (1.0.0)</li>
</ul>
:ET